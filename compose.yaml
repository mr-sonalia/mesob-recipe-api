services:
    server:
        container_name: recipe-server
        build:
            context: .
        ports:
            - $PORT:$PORT
        # env_file:
        #   - .env
        environment:
            DB_HOSTNAME: $DOCKER_DB_HOSTNAME
            DB_PORT: $DB_PORT
            DB_NAME: $DB_NAME
            DB_USERNAME: $DB_USERNAME
            DB_PASSWORD: $DB_PASSWORD

            SECRET_KEY: $SECRET_KEY
            EMAIL_USER: $EMAIL_USER
            EMAIL_PASSWORD: $EMAIL_PASSWORD

        command: gunicorn config.wsgi:application --bind 0.0.0.0:8000 # for production
        # command: python manage.py runserver # for development
        # depends_on:
        #     pg-db:
        #         condition: service_healthy

    pg-db:
        image: postgres:15
        container_name: $DOCKER_DB_HOSTNAME
        restart: always
        environment:
            POSTGRES_USER: $DB_USERNAME
            POSTGRES_PASSWORD: $DB_PASSWORD
            PGDATA: /var/lib/postgresql/data/db-files/
            POSTGRES_DB: $DB_NAME
        ports:
            - "5434:5434"
        command: postgres -p 5434 -c 'max_connections=100'
        volumes:
            - ./pgdata/db-files:/var/lib/postgresql/data/db-files

        healthcheck:
            test: ["CMD", "pg_isready"]
            interval: 10s
            timeout: 5s
            retries: 5

    rabbitmq:
      image: rabbitmq:3.11.4-management
      container_name: 'rabbitmq'
      restart: always
      environment:
        RABBITMQ_DEFAULT_USER: $RABBITMQ_DEFAULT_USER
        RABBITMQ_DEFAULT_PASS: $RABBITMQ_DEFAULT_PASS
      ports:
        - 15672:15672
        - 5672:5672
